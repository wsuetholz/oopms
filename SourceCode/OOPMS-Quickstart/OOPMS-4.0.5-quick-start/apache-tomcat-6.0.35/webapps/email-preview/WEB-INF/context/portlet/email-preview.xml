<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:ehcache="http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
            http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.5.xsd
            http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-2.5.xsd
            http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring http://ehcache-spring-annotations.googlecode.com/svn/schema/ehcache-spring/ehcache-spring-1.1.xsd">

    <context:component-scan base-package="org.jasig.portlet.emailpreview.controller"/>
    <context:component-scan base-package="org.jasig.portlet.emailpreview.dao.javamail" />
    <context:annotation-config />

    <ehcache:annotation-driven />
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"/>
    
    <!-- Ref to the mbean server -->
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
    </bean>

    <!-- EhCache management and statistics -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="net.sf.ehcache.management.ManagementService" />
        <property name="targetMethod" value="registerMBeans" />
        <property name="arguments">
            <list>
                <ref bean="cacheManager" />
                <ref bean="mbeanServer" />
                <value>true</value>
                <value>true</value>
                <value>true</value>
                <value>true</value>
            </list>
        </property>
    </bean>

    <bean id="exceptionResolver" class="org.springframework.web.portlet.handler.SimpleMappingExceptionResolver">
        <!-- 
         | Always declare an 'exceptionResolver' bean with a 'defaultErrorView' 
         | because, in addition to other uses, it protects the portlet from 
         | failing when a bad request (due to a bug or malicious user) doesn't 
         | match any declared @RequestMapping.  When this happens, the portlet 
         | throws an Exception and takes itself out of service until a portal 
         | restart.  THIS CONDITION AFFECTS ALL USERS!
         +-->
        <property name="defaultErrorView" value="error"/>
    </bean>
    
    <!-- 
     | This bean maps error codes to UI messages that will be shown to users.  
     | The keys are numeric HTTP codes (e.g. 401 for "not authorized"), and the 
     | values are used to pull UI strings from the messageSource bean.  This way 
     | all UI customization and internationalization can be managed in one place.
     |
     | In addition to numeric keys, provide also a 'default' key, which will be 
     | used for any error code that doesn't have it's own entry.  Lastly, the 
     | controller may also add a custom message by sending an HTTP 200 together 
     | with an 'errorMessage' property in the returned JSON.
     +-->
    <util:map id="jsErrorMessages">
        <entry key="401" value="ajax.errorMessage.401"/>
        <entry key="504" value="ajax.errorMessage.504"/>
        <entry key="900" value="ajax.errorMessage.900"/>
        <entry key="default" value="ajax.errorMessage.default"/>
    </util:map>

    <util:list id="protocols">
        <value>imap</value>
        <value>imaps</value>
        <value>pop3</value>
        <value>pop3s</value>
    </util:list>

</beans>