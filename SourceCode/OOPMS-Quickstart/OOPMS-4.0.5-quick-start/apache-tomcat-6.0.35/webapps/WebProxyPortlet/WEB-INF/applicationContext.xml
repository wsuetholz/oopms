<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<!--
 | Contains the bean definitions and relationships that are avalable
 | to the spring WebApplicationContext
 +-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:util="http://www.springframework.org/schema/util"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
    http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util-2.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
    http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
    
    <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>/WEB-INF/datasource.properties</value>
            </list>
        </property>
    </bean>
    
    <!-- HTTP Client Scheme Registry, this must be shared for reasonable performance -->
    <bean id="schemeRegistry" class="org.apache.http.conn.scheme.SchemeRegistry">
        <property name="items">
            <map>
                <entry key="http">
                    <bean class="org.apache.http.conn.scheme.Scheme">
                        <constructor-arg value="http"/>
                        <constructor-arg value="80" />
                        <constructor-arg>
                            <bean class="org.apache.http.conn.scheme.PlainSocketFactory" factory-method="getSocketFactory"/>
                        </constructor-arg>
                    </bean>
                </entry>
                <entry key="https">
                    <bean class="org.apache.http.conn.scheme.Scheme">
                        <constructor-arg value="https"/>
                        <constructor-arg value="443" />
                        <constructor-arg>
                            <bean class="org.apache.http.conn.ssl.SSLSocketFactory" factory-method="getSocketFactory"/>
                        </constructor-arg>
                    </bean>
                </entry>
            </map>
        </property>
    </bean>

<!-- The following 4 beans are needed for proxy CAS authentication.  The first 3 are from the
     Jasig Java CAS Client.
     proxyStorage is a common storage that the ticket validator and filter use to keep a PGT for a Principal
     ticketValidator is used to validateWebProxy portlet's proxy ticket and request its own PGT.  In this
                     example, it is configured to accept any proxy.  Its constructor argument must
                     be set to the CAS URL.  proxyCallbackUrl must be set to the Web Proxy Portlet's
                     proxy ticket receptor (configured in web.xml).
     proxyFilter is a filter that will receive the proxy tickets requested by ticketValidator.  Its
                 proxyReceptorUrl shown in this example should be sufficient and must be relative to
                 Web Proxy Portlet's own "base" URL.  The service property is not used by this filter
                 as it does not perform ticket validation.
     casAuthenticationHandler is Web Proxy Portlet's own bean that handles the CAS proxy authentication
                              as per the CAS protocol specification.  The myService property must be
                              set to the fully-qualified "base" URL of the portlet itself.  It is passed
                              to CAS for ticket validation, and it must match what uPortal used when it
                              obtained the proxy ticket for the portlet.
-->
<!-- 
  <bean name="proxyStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />
  
  <bean id="ticketValidator" class="org.jasig.cas.client.validation.Cas20ProxyTicketValidator">
    <constructor-arg index="0" value="https://adam3:8443/cas" />
    <property name="proxyCallbackUrl" value="http://localhost:8080/WebProxyPortlet/CasProxyReceptor" />
    <property name="acceptAnyProxy" value="true" />
    <property name="proxyGrantingTicketStorage" ref="proxyStorage" />
  </bean>

  <bean name="proxyFilter" class="org.jasig.cas.client.validation.Cas20ProxyReceivingTicketValidationFilter">
    <property name="service" value="https://my.local.service.com/cas-client" />
    <property name="proxyReceptorUrl" value="/CasProxyReceptor" />
    <property name="ticketValidator" ref="ticketValidator" />
    <property name="proxyGrantingTicketStorage" ref="proxyStorage" />
  </bean>

  <bean name="casAuthenticationHandler" class="edu.wisc.my.webproxy.beans.security.CasAuthenticationHandler">
    <property name="ticketValidator" ref="ticketValidator" />
    <property name="myService" value="http://localhost:8080/WebProxyPortlet" />
  </bean>
-->
    <bean id="HttpManagerBean" class="edu.wisc.my.webproxy.beans.http.HttpManagerImpl" scope="prototype">
      <property name="schemeRegistry" ref="schemeRegistry" />
    </bean>
<!-- Use this bean for Shibboleth support
    <bean id="HttpManagerBean" class="edu.wisc.my.webproxy.beans.http.ShibbolethEnabledHttpManagerImpl" scope="prototype">
      <property name="schemeRegistry" ref="schemeRegistry" /
      <property name="spPrivateKey" value="C:/JavaClasses/sp-key.pem"/>
      <property name="spCertificate" value="C:/JavaClasses/sp-cert.pem"/>
    </bean>
-->
    <bean id="HtmlParserBean" class="edu.wisc.my.webproxy.beans.filtering.NekoHtmlParser" scope="prototype" />
    
    <bean id="keyManager" class="edu.wisc.my.webproxy.beans.http.KeyManager" />
    
    <bean id="HttpManagerService" class="edu.wisc.my.webproxy.beans.http.HttpManagerService">
        <property name="webProxyStateDao" ref="webProxyStateDao"/>
        <property name="keyManager" ref="keyManager" />
    </bean>
    
    <bean id="SaxFilterBean" class="edu.wisc.my.webproxy.beans.SpringList" scope="prototype">
        <property name="wrappedList">
            <list>
                <!-- The order beans are specified in this list is reversed. The last filter will be the first executed -->
                <ref bean="FuncNameUrlFilter"/>
                <ref bean="PortletURLFilterBean"/>
                <ref bean="AbsoluteUrlFilterBean"/>
                <ref bean="ClippingFilterBean"/>
            </list>
        </property>
    </bean>
    
    <bean id="BaseUrlFilterBean" abstract="true">
        <property name="passThroughElements">
            <map>
                <entry key="LINK">
                    <set>
                        <value>HREF</value>
                    </set>
                </entry>
                <entry key="IMG">
                    <set>
                        <value>SRC</value>
                        <value>LOWSRC</value>
                        <value>USEMAP</value>
                    </set>
                </entry>
                <entry key="EMBED">
                    <set>
                        <value>SRC</value>
                    </set>
                </entry>
                <entry key="SCRIPT">
                    <set>
                        <value>SRC</value>
                    </set>
                </entry>
                <entry key="BODY">
                    <set>
                        <value>BACKGROUND</value>
                    </set>
                </entry>
                <entry key="APPLET">
                    <set>
                        <value>CODEBASE</value>
                    </set>
                </entry>                                                        
            </map> 
        </property>
        <property name="elements">
            <map>
                <entry key="A">
                    <set>
                        <value>HREF</value>
                    </set>
                </entry>
                <entry key="AREA">
                    <set>
                        <value>HREF</value>
                    </set>
                </entry>
                <entry key="BASE">
                    <set>
                        <value>HREF</value>
                    </set>
                </entry>
                <entry key="FRAME">
                    <set>
                        <value>SRC</value>
                    </set>
                </entry>
                <entry key="Q">
                    <set>
                        <value>CITE</value>
                    </set>
                </entry>
                <entry key="INS">
                    <set>
                        <value>CITE</value>
                    </set>
                </entry>
                <entry key="DEL">
                    <set>
                        <value>CITE</value>
                    </set>
                </entry>														
                <entry key="FORM">
                    <set>
                        <value>ACTION</value>
                    </set>
                </entry>
                <entry key="META">
                    <set>
                        <value>URL</value>
                    </set>
                </entry>
            </map> 
        </property>
    </bean>

    <bean id="FuncNameUrlFilter" parent="BaseUrlFilterBean" class="edu.wisc.my.webproxy.beans.filtering.FuncNameUrlFilter" scope="prototype">
    </bean>
    
    <bean id="AbsoluteUrlFilterBean" parent="BaseUrlFilterBean" class="edu.wisc.my.webproxy.beans.filtering.AbsoluteUrlFilter" scope="prototype">
    </bean>	

    <bean id="PortletURLFilterBean" parent="BaseUrlFilterBean" class="edu.wisc.my.webproxy.beans.filtering.PortletUrlFilter" scope="prototype">
	</bean>
	
    <bean id="ClippingFilterBean" class="edu.wisc.my.webproxy.beans.filtering.ClippingFilter" scope="prototype">
        <property name="acceptableQNames">
            <set>
                <value>br</value>
                <value>img</value>
                <value>meta</value>
                <value>link</value>
                <value>input</value>
                <value>col</value>
                <value>b</value>
            </set>
        </property>
    </bean>
    
        
    <bean id="ContentTypeBean" class="edu.wisc.my.webproxy.beans.SpringList" scope="prototype">
        <property name="wrappedList">
            <list>
                <value>text/.*</value>
                <value>XHTML/1.0</value>
            </list>
        </property>
    </bean>
    
    <bean id="ConfigBean" class="edu.wisc.my.webproxy.beans.SpringList" scope="prototype">
        <property name="wrappedList">
            <list>
                <ref bean="GeneralConfigBean"/>
                <ref bean="PageCacheConfigBean"/>
                <ref bean="HttpHeaderConfigBean"/>
                <ref bean="StaticHtmlBean"/>
                <ref bean="HttpClientConfigBean"/>
                <ref bean="ClippingConfigBean"/>
                <ref bean="HTMLParserConfigBean"/>
            </list>
        </property>
    </bean>
    
    
    <bean id="GeneralConfigBean" class="edu.wisc.my.webproxy.beans.config.GeneralConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/generalConfig.jsp</value>
        </property>
    </bean>
    <bean id="HttpHeaderConfigBean" class="edu.wisc.my.webproxy.beans.config.HttpHeaderConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/httpHeaderConfig.jsp</value>
        </property>
    </bean>
    <bean id="StaticHtmlBean" class="edu.wisc.my.webproxy.beans.config.StaticHtmlConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/staticHtmlConfig.jsp</value>
        </property>
    </bean>
    <bean id="HttpClientConfigBean" class="edu.wisc.my.webproxy.beans.config.HttpClientConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/httpClientConfig.jsp</value>
        </property>
    </bean>
    <bean id="ClippingConfigBean" class="edu.wisc.my.webproxy.beans.config.ClippingConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/clippingConfig.jsp</value>
        </property>
    </bean>
    <bean id="HTMLParserConfigBean" class="edu.wisc.my.webproxy.beans.config.HtmlParserConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/htmlParserConfig.jsp</value>
        </property>
    </bean>
    <bean id="PageCacheConfigBean" class="edu.wisc.my.webproxy.beans.config.CacheConfigImpl" scope="prototype">
        <property name="jsp">
            <value>/WEB-INF/jsp/cacheConfig.jsp</value>
        </property>
    </bean>
    
    <bean id="cacheManager" class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean">
        <property name="cacheManagerName" value="WebProxyPortlet.CacheManager" />
        <property name="configLocation" value="classpath:/ehcache.xml" />
    </bean>
    
    
    <bean id="PageCache" class="edu.wisc.my.webproxy.beans.cache.ehcache.EhPageCache">
        <property name="ehcache">
            <bean class="org.springframework.cache.ehcache.EhCacheFactoryBean" >
                <property name="cacheName" value="PageCache" />
                <property name="cacheManager" ref="cacheManager" />
            </bean>
        </property>
        <!-- default to 5 minute cache timeout in case time to live is negative -->
        <property name="cacheSecondsToLiveDefault" value="300" />
    </bean>
    
    
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
        <property name="driverClassName" value="${hibernate.connection.driver_class}" />
        <property name="url" value="${hibernate.connection.url}" />
        <property name="username" value="${hibernate.connection.username}" />
        <property name="password" value="${hibernate.connection.password}" />
        
        <property name="initialSize" value="2" />
        <property name="maxActive" value="64" />
        <property name="maxIdle" value="16" />
        <property name="minIdle" value="8" />
        <property name="maxWait" value="5000" />
    </bean>
    
    <!-- ********** Portlet DAOs ********** -->
    
    <bean id="webProxyStateDao" class="edu.wisc.my.webproxy.beans.http.WebProxyStateJpaDaoImpl">
    </bean>
    
    <!-- ********** JPA Beans ********** -->
    <bean id="openEntityManagerInViewInterceptor" class="org.springframework.orm.jpa.support.OpenEntityManagerInViewInterceptor">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    <bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
        <property name="dataSource" ref="dataSource" />
        <property name="jpaVendorAdapter" ref="jpaVendorAdapter" />
        <property name="persistenceUnitName" value="webProxyPersistence" />
    </bean>
    
    <!-- Adapater that can inject a cacheProvider into the hibernate entity manager -->
    <bean id="jpaVendorAdapter" class="org.jasig.portal.spring.orm.jpa.HibernateJpaVendorAdapter">
        <property name="databasePlatform" value="${hibernate.dialect}" />
        <property name="cacheProvider" ref="cacheProvider" />
    </bean>
    
    <bean id="cacheProvider" class="org.jasig.portal.utils.cache.hibernate.EhCacheProvider">
        <property name="cacheManager" ref="cacheManager" />
    </bean>
    
    <bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
        <property name="entityManagerFactory" ref="entityManagerFactory" />
    </bean>
    
    
    <tx:annotation-driven transaction-manager="transactionManager" />
    
    <bean class="org.springframework.orm.jpa.support.PersistenceAnnotationBeanPostProcessor">
        <property name="defaultPersistenceUnitName" value="webProxyPersistence" />
    </bean>
    
    
    <!-- ********** JMX Beans ********** -->
    <bean id="mbeanServer" class="org.springframework.jmx.support.MBeanServerFactoryBean">
        <property name="locateExistingServerIfPossible" value="true" />
    </bean>
    
    <bean id="jmxAdapter" class="org.springframework.jmx.export.MBeanExporter">
        <property name="server" ref="mbeanServer" />
        <property name="ensureUniqueRuntimeObjectNames" value="true" />
        <property name="assembler" ref="mbeanInfoAssembler" />
        <property name="beans">
            <map>
                <entry key="WebProxyPortlet:section=Persistence,name=HibernateStatistics" value-ref="hibernateStatisticsMBean"/>
                <entry key="WebProxyPortlet:section=Persistence,name=DataSource" value-ref="dataSource"/>
            </map>
        </property>
    </bean>
    
    <bean id="mbeanInfoAssembler" class="org.springframework.jmx.export.assembler.MethodExclusionMBeanInfoAssembler">
        <property name="ignoredMethodMappings">
            <props>
                <prop key="WebProxyPortlet:section=Persistence,name=DataSource">getConnection,getLogWriter,setLogWriter</prop>
            </props>
        </property>
    </bean>

    <!-- Hibernate perstentce statistics -->
    <bean id="hibernateStatisticsMBean" class="org.hibernate.jmx.StatisticsService">
        <property name="statisticsEnabled" value="true"/>
        <property name="sessionFactory">
            <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
                <property name="targetObject" ref="entityManagerFactory" />
                <property name="targetMethod" value="getSessionFactory" />
            </bean>
        </property>
    </bean>

    <!-- EhCache management and statistics -->
    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="targetClass" value="net.sf.ehcache.management.ManagementService" />
        <property name="targetMethod" value="registerMBeans" />
        <property name="arguments">
            <list>
                <ref bean="cacheManager" />
                <ref bean="mbeanServer" />
                <value>true</value>
                <value>true</value>
                <value>true</value>
                <value>true</value>
            </list>
        </property>
    </bean>
    
    
    <!-- ********** Scheduler Beans ********** -->
    <bean id="WebProxyTimerTasks" class="org.springframework.scheduling.timer.TimerFactoryBean">
        <property name="scheduledTimerTasks">
            <list>
                <ref bean="scheduledTask"/>
            </list>
        </property>
    </bean>
    
    <bean id="scheduledTask" class="org.springframework.scheduling.timer.ScheduledTimerTask">
        <!-- Delay 5 minutes -->
        <property name="delay" value="300000"/>
        <!-- Run hourly -->
        <property name="period" value="3600000"/>
        <property name="timerTask" ref="purgeExpiredCookies"/>
    </bean>

    <bean id="purgeExpiredCookies" class="org.springframework.scheduling.timer.MethodInvokingTimerTaskFactoryBean">
        <property name="targetObject" ref="webProxyStateDao"/>
        <property name="targetMethod" value="purgeExpiredCookies"/>
    </bean>


</beans>
