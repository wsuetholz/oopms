<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->
<web-app xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" metadata-complete="true" version="2.5" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
    
    <display-name>Web Proxy Portlet</display-name>
	
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>webproxy.root</param-value>
    </context-param>
    
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>WEB-INF/applicationContext.xml,WEB-INF/applicationContextOverrides.xml</param-value>
    </context-param>
    
    <listener>
        <listener-class>org.springframework.web.util.HttpSessionMutexListener</listener-class>
    </listener>
    
    <listener>
        <listener-class>org.springframework.web.util.WebAppRootListener</listener-class>
    </listener>
    
    <!--
     | This loads the applicationContext.xml spring bean config
	 | when the servlet context starts. The WebApplicationContext
	 | object representing the spring bean config is avalable in the
	 | servlet context.
	 +-->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
    
    <filter>
        <filter-name>OpenEntityManagerInViewFilter</filter-name>
        <filter-class>org.springframework.orm.jpa.support.OpenEntityManagerInViewFilter</filter-class>
    </filter>
    
    <filter-mapping>
        <filter-name>OpenEntityManagerInViewFilter</filter-name>
        <url-pattern>/*</url-pattern>
        <servlet-name>*</servlet-name>
    </filter-mapping>
    
    <servlet>
        <servlet-name>ProxyServlet</servlet-name>
        <servlet-class>edu.wisc.my.webproxy.servlet.ProxyServlet</servlet-class>
    </servlet>
<servlet>
<servlet-name>WebProxyPortlet</servlet-name>
<servlet-class>org.apache.pluto.container.driver.PortletServlet</servlet-class>
<init-param>
<param-name>portlet-name</param-name>
<param-value>WebProxyPortlet</param-value>
</init-param>
<load-on-startup>1</load-on-startup>
</servlet>
    
    <servlet-mapping>
        <servlet-name>ProxyServlet</servlet-name>
        <url-pattern>/ProxyServlet/*</url-pattern>
    </servlet-mapping>
<servlet-mapping>
<servlet-name>WebProxyPortlet</servlet-name>
<url-pattern>/PlutoInvoker/WebProxyPortlet</url-pattern>
</servlet-mapping>

<!-- The following section should be enabled to add support for proxy CAS authentication
     The servlet mapping is completely fake and uses the ProxyServlet definition.  The Jasig
     Java CAS client filter intercepts a call to this endpoint and grabs the proxy ticket
     received from CAS.
-->
<!--
    <servlet-mapping>
        <servlet-name>ProxyServlet</servlet-name>
        <url-pattern>/CasProxyReceptor/*</url-pattern>
    </servlet-mapping>

    <filter>
        <filter-name>CAS Proxy Filter</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
        <init-param>
            <param-name>targetBeanName</param-name>
            <param-value>proxyFilter</param-value>
        </init-param>
    </filter>

    <filter-mapping>
        <filter-name>CAS Proxy Filter</filter-name>
        <url-pattern>/CasProxyReceptor/*</url-pattern>
    </filter-mapping>
-->
     
</web-app>
